apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: lookup
spec:
    serviceName: lookup
    replicas: 4 # Match Kafka and MongoDB replicas
    selector:
        matchLabels:
            app: lookup
    template:
        metadata:
            labels:
                app: lookup
        spec:
            affinity:
                nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                            - matchExpressions:
                                  - key: kafka-ordinal
                                    operator: In
                                    values:
                                        - $(POD_ORDINAL)
            containers:
                - name: lookup
                  env:
                      - name: POD_ORDINAL
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.annotations['statefulset.kubernetes.io/pod-name']
                      - name: MONGO_URL
                        value: "mongodb-$(POD_ORDINAL).mongodb:27017"
                      - name: PYTHONPATH
                        value: "/app:/app/kafka_messaging/consumer:/app/kafka_messaging/producer:/app/grpc_sharing"
                - name: kafka-services
                  image: matiaspaavilainen/distributed-systems:kafka_services
                  imagePullPolicy: Always
                  env:
                      - name: POD_ORDINAL
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.annotations['statefulset.kubernetes.io/pod-name']
                      - name: KAFKA_BROKER
                        value: "kafka-$(POD_ORDINAL).kafka:9092"
                      - name: PORT_BASE
                        value: "30000"
                      - name: PYTHONPATH
                        value: "/app/consumer:/app/producer"
