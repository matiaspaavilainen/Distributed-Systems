apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: kafka
    labels:
        app: kafka
spec:
    serviceName: kafka
    replicas: 4 # 3 workers + 1 control plane
    selector:
        matchLabels:
            app: kafka
    template:
        metadata:
            labels:
                app: kafka
        spec:
            initContainers:
                - name: node-labeler
                  image: bitnami/kubectl
                  command:
                      - /bin/sh
                      - -c
                      - |
                          NODE=$(kubectl get pod ${POD_NAME} -o=jsonpath='{.spec.nodeName}')
                          kubectl label node $NODE kafka-ordinal=${ORDINAL} --overwrite
                  env:
                      - name: POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                      - name: ORDINAL
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.annotations['statefulset.kubernetes.io/pod-name']
            affinity:
                nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                            - matchExpressions:
                                  - key: node-role.kubernetes.io/control-plane
                                    operator: Exists
                                  - key: kafka-ordinal
                                    operator: In
                                    values:
                                        - "kafka-0" # Control plane gets kafka-0
            containers:
                - name: kafka
                  image: bitnami/kafka:latest
                  ports:
                      - containerPort: 9092
                  env:
                      - name: KAFKA_CFG_ZOOKEEPER_CONNECT
                        value: "zookeeper.default.svc.cluster.local:2181"
                      - name: ALLOW_PLAINTEXT_LISTENER
                        value: "yes"
                      - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
                        value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
                      - name: KAFKA_CFG_LISTENERS
                        value: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092"
                      - name: KAFKA_CFG_ADVERTISED_LISTENERS
                        value: "INTERNAL://$(POD_NAME).kafka:9092,EXTERNAL://$(POD_NAME).kafka:29092"
                      - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
                        value: "INTERNAL"
                      - name: POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
---
apiVersion: v1
kind: Service
metadata:
    name: kafka
spec:
    clusterIP: None # Headless service
    selector:
        app: kafka
    ports:
        - port: 9092
          targetPort: 9092
